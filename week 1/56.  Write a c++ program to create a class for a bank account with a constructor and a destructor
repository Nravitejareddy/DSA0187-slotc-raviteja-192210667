#include <iostream>
#include <string>

class BankAccount {
private:
    std::string accountHolder;
    double balance;

public:
    // Constructor
    BankAccount(const std::string& holder, double initialBalance) : accountHolder(holder), balance(initialBalance) {
        std::cout << "Account created for " << accountHolder << " with initial balance $" << balance << std::endl;
    }

    // Destructor
    ~BankAccount() {
        std::cout << "Account for " << accountHolder << " is being destroyed." << std::endl;
    }

    // Function to display account information
    void displayAccountInfo() {
        std::cout << "Account Holder: " << accountHolder << std::endl;
        std::cout << "Balance: $" << balance << std::endl;
    }

    // Function to deposit money
    void deposit(double amount) {
        balance += amount;
        std::cout << "Deposited $" << amount << ". New balance: $" << balance << std::endl;
    }

    // Function to withdraw money
    void withdraw(double amount) {
        if (amount <= balance) {
            balance -= amount;
            std::cout << "Withdrawn $" << amount << ". New balance: $" << balance << std::endl;
        } else {
            std::cout << "Insufficient funds. Withdrawal unsuccessful." << std::endl;
        }
    }
};

int main() {
    // Create a BankAccount object
    BankAccount myAccount("John Doe", 1000.0);

    // Display initial account information
    myAccount.displayAccountInfo();

    // Deposit some money
    myAccount.deposit(500.0);

    // Withdraw some money
    myAccount.withdraw(200.0);

    // Display final account information

    return 0;
}

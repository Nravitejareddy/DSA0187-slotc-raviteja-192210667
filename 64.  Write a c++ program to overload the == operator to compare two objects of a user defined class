#include <iostream>
#include <string>

class MyClass {
private:
    int value;

public:
    // Constructor
    MyClass(int initValue) : value(initValue) {
    }

    // Overloading the == operator as a member function
    bool operator==(const MyClass& other) const {
        return value == other.value;
    }
};

int main() {
    MyClass obj1(5);
    MyClass obj2(5);
    MyClass obj3(10);

    // Using the overloaded == operator to compare objects
    if (obj1 == obj2) {
        std::cout << "obj1 and obj2 are equal." << std::endl;
    } else {
        std::cout << "obj1 and obj2 are not equal." << std::endl;
    }

    if (obj1 == obj3) {
        std::cout << "obj1 and obj3 are equal." << std::endl;
    } else {
        std::cout << "obj1 and obj3 are not equal." << std::endl;
    }

    return 0;
}
